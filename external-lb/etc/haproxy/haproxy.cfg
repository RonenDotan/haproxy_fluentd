global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
        stats timeout 30s
        user haproxy
        group haproxy
        daemon
        # mediaodin:
        nbproc 6
        maxconn 28000
        # ---
        tune.ssl.default-dh-param 2048


defaults
        log     global
        mode    http
        option forwardfor
        option http-server-close
        option  httplog
        option  dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http

listen mon1
        bind :9001
        mode    http
        bind-process 1
        stats enable
        stats uri /stats
        stats realm Haproxy\ Statistics
        stats auth lesha:pilpilon
# https://www.haproxy.com/blog/exploring-the-haproxy-stats-page/

listen mon2
        bind :9002
        mode    http
        bind-process 2
        stats enable
        stats uri /stats
        stats realm Haproxy\ Statistics
        stats auth lesha:pilpilon

listen mon3
        bind :9003
        mode    http
        bind-process 3
        stats enable
        stats uri /stats
        stats realm Haproxy\ Statistics
        stats auth lesha:pilpilon

listen mon4
        bind :9004
        mode    http
        bind-process 4
        stats enable
        stats uri /stats
        stats realm Haproxy\ Statistics
        stats auth lesha:pilpilon

listen mon5
        bind :9005
        mode    http
        bind-process 5
        stats enable
        stats uri /stats
        stats realm Haproxy\ Statistics
        stats auth lesha:pilpilon

listen mon6
        bind :9006
        mode    http
        bind-process 6
        stats enable
        stats uri /stats
        stats realm Haproxy\ Statistics
        stats auth lesha:pilpilon

listen mon7
        bind :9007
        mode    http
        bind-process 7
        stats enable
        stats uri /stats
        stats realm Haproxy\ Statistics
        stats auth lesha:pilpilon

listen mon8
        bind :9008
        mode    http
        bind-process 8
        stats enable
        stats uri /stats
        stats realm Haproxy\ Statistics
        stats auth lesha:pilpilon

listen mon9
        bind :9009
        mode    http
        bind-process 9
        stats enable
        stats uri /stats
        stats realm Haproxy\ Statistics
        stats auth lesha:pilpilon

frontend www-http
        http-request deny if { url_param(in_country) -m str -f /etc/haproxy/block_in_country.list } # Deny From certain GEOs
        bind *:80
        # -------------------------------
        # Limit Same Ip
        # See https://www.haproxy.com/blog/four-examples-of-haproxy-rate-limiting/
        # Ip based table, expire every 10 mins.check amount of requests over the last 10 mins
        stick-table type ip size 100m expire 30m store http_req_rate(30m)
#       http-request track-sc0 req.hdr(x-forwarded-for,1)
        http-request track-sc0 hdr(cf-connecting-ip)
#       http-request deny deny_status 429 if { sc_http_req_rate(0) gt 20 } # don't allow more then 20 requests.
        http-request redirect code 301 location https://serving.7b8b965ad.host/imp?pub_id=1008&tag_id=1007  if { url_param(in_country) -m str -f /etc/haproxy/send_to_trafficmizer.list }
        http-request redirect code 301 location https://serving.7b8b965ad.host/imp?pub_id=1008&tag_id=1007  if { sc_http_req_rate(0) gt 100 } # don't allow more then 20 requests.

        http-request set-header tag_id %[url_param(pid)] if { url_param(pid) -m found }
        http-request set-header tag_id %[url_param(tag_id)] if { url_param(tag_id) -m found }

        http-request set-header pub_by_tag %[hdr(tag_id),map(/etc/haproxy/pub_by_tag.map,0)]

        http-request set-var(txn.IsRedirect) str("0")
        http-request set-var(txn.IsRedirect) str("1") if { req.hdr(tag_id) -m str -f /etc/haproxy/redirect_tags.list }

#       acl is_new_serving req.hdr(tag_id) -m str -f /etc/haproxy/new_serving_tags.list
        http-request set-var(req.rand) rand(99)
        acl is_new_serving hdr(tag_id),map(/etc/haproxy/new_serving_tags.map,0),sub(req.rand) gt 0
#       http-request set-header is_new_serv_rand 0
#       http-request set-header is_new_serv_rand 1 if is_new_serving_2
#       declare capture request len 4
#        http-request capture req.hdr(is_new_serv_rand) id 0


        http-request set-header serving_geo %[hdr(cf-ipcountry),map(/etc/haproxy/serving_geo.map,"us")]
#
        http-request redirect code 301 location https://%[req.hdr(serving_geo)].51ce410c.best/imp?%[query]&is_redirect=%[var(txn.IsRedirect)]&ver=1.01&pub_by_tag=%[req.hdr(pub_by_tag)] if is_new_serving
#        http-request redirect code 301 location https://%[req.hdr(serving_geo)].51ce410c.best/imp?%[query]&is_redirect=%[var(txn.IsRedirect)]&ver=1.01&pub_by_tag=%[req.hdr(pub_by_tag)]



#       http-request redirect code 301 location https://eu.51ce410c.best/imp?tag_id=%[url_param(tag_id)]&pub_id=%[url_param(pub_id)]&ipb=%[req.hdr(cf-connecting-ip)]&rand_123=%[var(txn.CurrRand)]&sub_id=%[url_param(sub_id)]&sub_id2=%[url_param(sub_id2)]&scidu=%[url_param(scidu)]&idfa=%[url_param(idfa)]&androidid=%[url_param(androidid)]&is_redirect=%[var(txn.IsRedirect)]&e=d if phonder !is_discrepency_tag use_eu

#       http-request redirect code 301 location https://us.51ce410c.best/imp?tag_id=%[url_param(tag_id)]&pub_id=%[url_param(pub_id)]&ipb=%[req.hdr(cf-connecting-ip)]&rand_123=%[var(txn.CurrRand)]&sub_id=%[url_param(sub_id)]&sub_id2=%[url_param(sub_id2)]&scidu=%[url_param(scidu)]&idfa=%[url_param(idfa)]&androidid=%[url_param(androidid)]&is_redirect=%[var(txn.IsRedirect)] if phonder !is_discrepency_tag use_us

#       http-request redirect code 301 location https://fe.51ce410c.best/imp?tag_id=%[url_param(tag_id)]&pub_id=%[url_param(pub_id)]&ipb=%[req.hdr(cf-connecting-ip)]&rand_123=%[var(txn.CurrRand)]&sub_id=%[url_param(sub_id)]&sub_id2=%[url_param(sub_id2)]&scidu=%[url_param(scidu)]&idfa=%[url_param(idfa)]&androidid=%[url_param(androidid)]&is_redirect=%[var(txn.IsRedirect)] if phonder !is_discrepency_tag !use_us !use_eu

        # ------------------------------
        #
        # Add Profiling Param, only for 2%
        #http-request set-query %[query]&XDEBUG_PROFILE=1 if { rand(100) gt 98 }


        reqadd X-Forwarded-Proto:\ http
        capture request header Host len 150
        declare capture response len 100
        http-response capture status id 0
        maxconn 28000
        default_backend app-backend

# ------------------------------------------------------------------------
# Old - Not Sure Usage
#frontend www-https
##       http-request deny if { url_param(in_country) id }
#        http-request deny if { url_param(in_country) -m str -f /etc/haproxy/block_in_country.list }
#        bind *:443 ssl crt /etc/ssl/private/list/
#        reqadd X-Forwarded-Proto:\ https
#        default_backend app-backend
#        maxconn 14000
# ----------------------------------------------------------------------


backend app-backend
#       balance roundrobin
#        stick-table type ip size 1g expire 1h
#       stick on req.hdr(x-forwarded-for,1)           # Hourly Stick Table
#       balance hdr(x-forwarded-for,1)
        balance hdr(cf-connecting-ip)
        server srv01 10.132.132.103:80 check
        server srv03 10.132.36.131:80 check
#        server afftrack-srv01 10.132.202.198:80 check
#        server afftrack-srv02 10.132.204.99:80 check
